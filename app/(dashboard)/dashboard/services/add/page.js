"use client";

import { Button } from "@/components/ui/button";
import InputField from "@/utilities/InputField";
import SelectField from "@/utilities/SelectFiled";
import React, { useEffect, useState } from "react";
import { getDepartmentsByProgram } from "@/LocalDatabase/departments";
import { sessionList } from "@/LocalDatabase/seasion";
import { getYearsByProgram } from "@/LocalDatabase/year";

export default function AddServicePage() {

    const [departments, setDepartments] = useState([]);
    const [year, setYear] = useState([]);

    const [formData, setFormData] = useState({
        title: "",
        description: "",
        program: "",
        department: "",
        classYear: "",
        session: "",
        fee: "",
        requiredDocuments: "", 
    });

    const handleChange = (e) => {
        const { name, value, type, checked } = e.target;
        setFormData((prev) => ({
            ...prev,
            [name]: type === "checkbox" ? checked : value,
        }));
    };


    // deparment filter using Program
    // ekhane formData.program er name ar departments.json er program nam same thakte hobe , tobei ata kaj korbe.
    useEffect(() => {
        if (formData.program) {
            const filterdDeparment = getDepartmentsByProgram(formData.program);
            const filteredYear = getYearsByProgram(formData.program);
            setYear(filteredYear)
            setDepartments(filterdDeparment);
        }
    }, [formData.program])

    const sessionOptions = sessionList.map((s) => ({
        label: s,
        value: s,
    }));



    const handleSubmit = (e) => {
        e.preventDefault();

        const finalData = {
            ...formData,
            requiredDocuments: formData.requiredDocuments
                .split(",")
                .map((doc) => doc.trim()),
        };

        console.log("‚úÖ Submitted data:", finalData);
        // API call here...
    };

    return (
        <div className="min-h-screen bg-gray-50 px-4 py-10 flex items-start justify-center">
            <div className="w-full max-w-2xl bg-white shadow-lg rounded-xl p-8 border">
                <h2 className="text-2xl font-semibold text-center text-gray-800 mb-6">
                    üéì ‡¶®‡¶§‡ßÅ‡¶® ‡¶∏‡¶æ‡¶∞‡ßç‡¶≠‡¶ø‡¶∏ ‡¶Ø‡ßÅ‡¶ï‡ßç‡¶§ ‡¶ï‡¶∞‡ßÅ‡¶®
                </h2>

                <form onSubmit={handleSubmit} className="space-y-4 grid grid-cols-1">
                    <InputField
                        label=" ‡¶∂‡¶ø‡¶∞‡ßã‡¶®‡¶æ‡¶Æ"
                        name="title"
                        value={formData.title}
                        onChange={handleChange}
                        required
                    />
                    <InputField
                        label="‡¶¨‡¶ø‡¶∏‡ßç‡¶§‡¶æ‡¶∞‡¶ø‡¶§ ‡¶¨‡¶ø‡¶¨‡¶∞‡¶£"
                        name="description"
                        value={formData.description}
                        onChange={handleChange}
                        required
                    />

                    <SelectField
                        label="üèõÔ∏è ‡¶™‡ßç‡¶∞‡ßã‡¶ó‡ßç‡¶∞‡¶æ‡¶Æ (‡¶Ö‡¶®‡¶æ‡¶∞‡ßç‡¶∏/‡¶°‡¶ø‡¶ó‡ßç‡¶∞‡¶ø/‡¶á‡¶®‡ßç‡¶ü‡¶æ‡¶∞‡¶Æ‡ßá‡¶°‡¶ø‡ßü‡ßá‡¶ü)"
                        name="program"
                        value={formData.program}
                        onChange={handleChange}
                        required
                        options={[
                            { label: "‡¶Ö‡¶®‡¶æ‡¶∞‡ßç‡¶∏", value: "honors" },
                            { label: "‡¶°‡¶ø‡¶ó‡ßç‡¶∞‡¶ø", value: "degree" },
                            { label: "‡¶á‡¶®‡ßç‡¶ü‡¶æ‡¶∞‡¶Æ‡ßá‡¶°‡¶ø‡ßü‡ßá‡¶ü", value: "intermediate" },
                        ]}
                    />


                    <SelectField
                        label="üìö ‡¶¨‡¶ø‡¶≠‡¶æ‡¶ó"
                        name="department"
                        value={formData.department}
                        onChange={handleChange}
                        required
                        options={departments}
                    />


                    <SelectField
                        label="üìö ‡¶¨‡¶∞‡ßç‡¶∑"
                        name="classYear"
                        value={formData.classYear}
                        onChange={handleChange}
                        required
                        options={year}
                    />

                    <SelectField
                        label="üìö ‡¶∏‡ßá‡¶∂‡¶®"
                        name="session"
                        value={formData.session}
                        onChange={handleChange}
                        required
                        options={sessionOptions}
                    />

                    <InputField
                        label="‡¶´‡¶ø (‡ß≥)"
                        name="fee"
                        type="number"
                        value={formData.fee}
                        onChange={handleChange}
                        required
                    />
                    <InputField
                        label="‡¶™‡ßç‡¶∞‡ßü‡ßã‡¶ú‡¶®‡ßÄ‡ßü ‡¶°‡¶ï‡ßÅ‡¶Æ‡ßá‡¶®‡ßç‡¶ü (‡¶ï‡¶Æ‡¶æ ‡¶¶‡¶ø‡ßü‡ßá ‡¶Ü‡¶≤‡¶æ‡¶¶‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶®)"
                        name="requiredDocuments"
                        placeholder="‡¶Ü‡¶ß‡¶æ‡¶∞ ‡¶ï‡¶æ‡¶∞‡ßç‡¶°, ‡¶Ü‡¶¨‡ßá‡¶¶‡¶® ‡¶´‡¶∞‡¶Æ, ‡¶∏‡¶®‡¶¶"
                        value={formData.requiredDocuments}
                        onChange={handleChange}
                        required
                    />

                    <Button
                        type="submit"
                        className="w-full  my-20 bg-green-600 text-white font-semibold rounded hover:bg-green-700"
                    >
                        ‚úÖ ‡¶∏‡¶æ‡¶¨‡¶Æ‡¶ø‡¶ü ‡¶ï‡¶∞‡ßÅ‡¶®
                    </Button>
                </form>
            </div>
        </div>
    );
}
