import { Order } from "@/database/models/Order";
import { adminAuthGuard } from "@/middlewere/adminAuthGuard";
import { NextResponse } from "next/server";



//  api => /api/order/update/status/[orderId]
export const PUT = async (req, { params }) => {
    try {
        // üîê Auth Guard: ‡¶∂‡ßÅ‡¶ß‡ßÅ‡¶Æ‡¶æ‡¶§‡ßç‡¶∞ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶°‡¶Æ‡¶ø‡¶®‡ßá‡¶∞ ‡¶Ö‡¶®‡ßÅ‡¶Æ‡¶§‡¶ø
        const { error, admin, response } = await adminAuthGuard(req);
        if (error) return response;

        const { orderStatus } = await req.json();
        const { orderId } = await params;

        const isOrder = await Order.findById(orderId);

        if (!isOrder) {
            return NextResponse.json(
                { message: "‡¶Ö‡¶∞‡ßç‡¶°‡¶æ‡¶∞ ‡¶™‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ ‡¶Ø‡¶æ‡¶Ø‡¶º‡¶®‡¶ø!" },
                { status: 404 }
            );
        }

        const isUpdated = await Order.findByIdAndUpdate(orderId, {
            $set: {
                status: orderStatus,
            },
        });

        if (!isUpdated) {
            return NextResponse.json(
                { message: "‡¶Ö‡¶∞‡ßç‡¶°‡¶æ‡¶∞ ‡¶∏‡ßç‡¶ü‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶∏ ‡¶Ü‡¶™‡¶°‡ßá‡¶ü ‡¶π‡¶Ø‡¶º‡¶®‡¶ø!" },
                { status: 404 }
            );
        }

        return NextResponse.json(
            { message: "‡¶Ö‡¶∞‡ßç‡¶°‡¶æ‡¶∞ ‡¶∏‡ßç‡¶ü‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶∏ ‡¶∏‡¶´‡¶≤‡¶≠‡¶æ‡¶¨‡ßá ‡¶Ü‡¶™‡¶°‡ßá‡¶ü ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá!" },
            { status: 200 }
        );
    } catch (error) {
        console.log("Order Status Update Error:", error);
        return NextResponse.json(
            { message: "‡¶∏‡ßç‡¶ü‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶∏ ‡¶Ü‡¶™‡¶°‡ßá‡¶ü ‡¶ï‡¶∞‡¶§‡ßá ‡¶¨‡ßç‡¶Ø‡¶∞‡ßç‡¶• ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá!" },
            { status: 500 }
        );
    }
};
